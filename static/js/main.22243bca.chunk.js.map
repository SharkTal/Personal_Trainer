{"version":3,"sources":["component/AddCustomer.js","component/EditCustomer.js","component/AddTrainings.js","component/Customerlist.js","component/Trainings.js","component/TheCalendar.js","component/DrawerNav.js","App.js","reportWebVitals.js","index.js"],"names":["AddCustomer","props","React","useState","open","setOpen","firstname","lastname","streetaddress","postcode","city","email","phone","customer","SetCustomer","handleClose","inputChanged","e","target","name","value","Button","style","marginTop","variant","color","onClick","Dialog","onClose","aria-labelledby","DialogTitle","id","DialogContent","TextField","margin","label","onChange","fullWidth","DialogActions","addCustomer","EditCustomer","console","log","link","editCustomer","AddTrainings","date","Date","activity","duration","training","setTraining","selectedCustomer","fetch","links","href","then","res","json","data","alert","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","renderInput","newDate","toISOString","saveTraining","Customerlist","customerslist","setCustomerlist","message","setMessage","gridApi","setGridApi","setGridColumnApi","setSelectedCustomer","openSnackbar","fetchCustomers","content","catch","err","useEffect","url","updatedCustomer","method","body","JSON","stringify","headers","ok","columns","field","sortable","filter","rowGroup","hide","headName","width","cellRendererFramework","params","IconButton","window","confirm","response","error","paddingTop","height","newCustomer","_","className","rowData","columnDefs","pagination","paginationPageSize","suppressCellSelection","rowSelection","onGridReady","api","columnApi","onSelectionChanged","getSelectedRows","autoGroupColumnDef","headerName","minWidth","cellRenderer","cellRendererParams","checkbox","Snackbar","autoHideDuration","Trainings","trainings","setTrainings","fetchTrainings","format","TheCalendar","localizer","momentLocalizer","moment","responseData","events","map","event","startDate","toDate","endDate","add","title","startAccessor","endAccessor","showMultiDayTimes","components","timeSlotWrapper","children","cloneElement","Children","only","backgroundColor","drawerWidth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","drawer","flexShrink","drawerPaper","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","flexGrow","contentShift","textDecoration","palette","text","primary","DrawerNavLeft","classes","useTheme","CssBaseline","AppBar","position","clsx","Toolbar","aria-label","edge","Typography","noWrap","Drawer","anchor","paper","direction","Divider","List","to","ListItem","ListItemIcon","ListItemText","button","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22243bca.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PeopleAltIcon from '@material-ui/icons/PeopleAlt';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nconst AddCustomer = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [customer, SetCustomer] = useState({\n        firstname: '',\n        lastname: '',\n        streetaddress: '',\n        postcode: '',\n        city: '',\n        email: '',\n        phone: '',\n    })\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleAdd = () => {\n        props.addCustomer(customer);\n        setOpen(false);\n    };\n\n    const inputChanged = (e) => {\n        SetCustomer({ ...customer, [e.target.name]: e.target.value })\n    };\n\n    return (\n        <div>\n            <Button style={{ marginTop: 20 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                <PeopleAltIcon /> <AddCircleIcon />\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add new customer</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Firstname\"\n                        value={customer.firstname}\n                        name=\"firstname\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Lastname\"\n                        value={customer.lastname}\n                        name=\"lastname\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Streetaddress\"\n                        value={customer.streetaddress}\n                        name=\"streetaddress\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Postcode\"\n                        value={customer.postcode}\n                        name=\"postcode\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"City\"\n                        value={customer.city}\n                        name=\"city\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Email\"\n                        value={customer.email}\n                        name=\"email\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Phone\"\n                        value={customer.phone}\n                        name=\"phone\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleAdd} color=\"primary\">\n                        Add\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nexport default AddCustomer;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/Edit';\nconst EditCustomer = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [customer, SetCustomer] = useState({\n        firstname: '',\n        lastname: '',\n        streetaddress: '',\n        postcode: '',\n        city: '',\n        email: '',\n        phone: '',\n    })\n\n    const handleClickOpen = () => {\n        setOpen(true);\n        console.log(props.customer);\n        console.log(props.link);\n        SetCustomer({\n            firstname: props.customer.firstname,\n            lastname: props.customer.lastname,\n            streetaddress: props.customer.streetaddress,\n            postcode: props.customer.postcode,\n            city: props.customer.city,\n            email: props.customer.email,\n            phone: props.customer.phone,\n        })\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n\n    const inputChanged = (e) => {\n        SetCustomer({ ...customer, [e.target.name]: e.target.value })\n    };\n\n    const handleSave = () => {\n        props.editCustomer(props.link, customer)\n        setOpen(false);\n    }\n\n    return (\n        <div>\n            <Button color=\"primary\" onClick={handleClickOpen}>\n                <EditIcon />\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Edit customer information</DialogTitle>\n                <DialogContent>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Firstname\"\n                        value={customer.firstname}\n                        name=\"firstname\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Lastname\"\n                        value={customer.lastname}\n                        name=\"lastname\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Streetaddress\"\n                        value={customer.streetaddress}\n                        name=\"streetaddress\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Postcode\"\n                        value={customer.postcode}\n                        name=\"postcode\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"City\"\n                        value={customer.city}\n                        name=\"city\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Email\"\n                        value={customer.email}\n                        name=\"email\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Phone\"\n                        value={customer.phone}\n                        name=\"phone\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleSave} color=\"primary\">\n                        Save\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nexport default EditCustomer;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FitnessCenterIcon from '@material-ui/icons/FitnessCenter';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport AdapterDateFns from '@material-ui/lab/AdapterDateFns';\nimport LocalizationProvider from '@material-ui/lab/LocalizationProvider';\nimport DateTimePicker from '@material-ui/lab/DateTimePicker';\nconst AddTrainings = (props) => {\n    const [open, setOpen] = React.useState(false);\n    const [customer, SetCustomer] = useState({});\n\n    const [training, setTraining] = useState({\n        date: new Date(),\n        activity: '',\n        duration: '',\n        customer: ''\n    })\n\n    const handleClickOpen = () => {\n        // console.log(props.selectedCustomer.links[1].href)\n        if (props.selectedCustomer != null) {\n            fetch(props.selectedCustomer.links[1].href)\n                .then(res => res.json())\n                .then(data => SetCustomer(data))\n            setTraining({ ...training, customer: props.selectedCustomer.links[1].href })\n            console.log(training.customer)\n            setOpen(true)\n        }\n        else\n            alert(\"Please select a customer first !\")\n\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleAdd = () => {\n        props.saveTraining(training);\n        setOpen(false);\n    };\n\n    const inputChanged = (e) => {\n        setTraining({ ...training, [e.target.name]: e.target.value })\n    };\n    const dateChanged = date => {\n        date = date.toISOString();\n        setTraining({ ...training, date: date });\n    };\n    return (\n        <div>\n            <Button style={{ marginTop: 20 }} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                <FitnessCenterIcon /> <AddCircleIcon />\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Add new trainings</DialogTitle>\n                <DialogContent>\n\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DateTimePicker\n                            renderInput={(props) => <TextField {...props} />}\n                            label=\"DateTimePicker\"\n                            value={training.value}\n                            onChange={(newDate) => dateChanged(newDate)\n                            }\n                        />\n                    </LocalizationProvider>\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Duration\"\n                        value={training.duration}\n                        name=\"duration\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Activity\"\n                        value={training.activity}\n                        name=\"activity\"\n                        onChange={inputChanged}\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Firstname\"\n                        value={customer.firstname}\n                        name=\"firstname\"\n                        fullWidth\n                    />\n                    <TextField\n                        margin=\"dense\"\n                        label=\"Lastname\"\n                        value={customer.lastname}\n                        name=\"lastname\"\n                        fullWidth\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Cancel\n          </Button>\n                    <Button onClick={handleAdd} color=\"primary\">\n                        Add\n          </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    );\n}\nexport default AddTrainings;","import React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddCustomer from './AddCustomer';\nimport EditCustomer from './EditCustomer';\nimport AddTrainings from './AddTrainings';\n\n\nconst Customerlist = () => {\n\n    const [customerslist, setCustomerlist] = useState([]);\n    const [open, setOpen] = useState(false);\n    const [message, setMessage] = useState();\n    const [gridApi, setGridApi] = useState(null);\n    const [, setGridColumnApi] = useState(null);\n    const [selectedCustomer, setSelectedCustomer] = useState(null);\n\n    const onGridReady = (params) => {\n        setGridApi(params.api);\n        setGridColumnApi(params.columnApi);\n    }\n\n    const onSelectionChanged = () => {\n        var selectedCustomer = gridApi.getSelectedRows();\n        console.log(selectedCustomer[0]);\n        setSelectedCustomer(selectedCustomer[0]);\n    };\n\n    const openSnackbar = () => {\n        setOpen(true);\n    };\n    const closeSnackbar = () => {\n        setOpen(false);\n    }\n\n    const fetchCustomers = () => {\n        fetch('https://customerrest.herokuapp.com/api/customers')\n            .then(res => res.json())\n            .then(data => setCustomerlist(data.content))\n            .catch(err => console.log(err))\n    };\n\n    useEffect(() => fetchCustomers(), []);\n\n\n    const addCustomer = (newCustomer) => {\n        fetch('https://customerrest.herokuapp.com/api/customers', {\n            method: 'POST',\n            body: JSON.stringify(newCustomer),\n            headers: { 'Content-type': 'application/json' }\n        })\n            .then(res => {\n                if (res.ok) {\n                    setMessage(\"Customer was added\");\n                    fetchCustomers();\n                    openSnackbar();\n                }\n                else\n                    alert('Failed to add new customer!')\n            })\n    }\n\n    const deleteCustomer = (url) => {\n        //console.log(data.links[0].href)\n        if (window.confirm('Are you sure?')) {\n            fetch(url, { method: 'DELETE' })\n                .then(response => {\n                    if (response.ok) {\n                        setMessage(\"Customer was deleted!\")\n                        fetchCustomers();\n                        openSnackbar();\n                    }\n\n                    else { alert('Something went wrong!') }\n                })\n                .catch(err => console.error(err))\n        }\n    }\n\n    const editCustomer = (url, updatedCustomer) => {\n        fetch(url, {\n            method: 'PUT',\n            body: JSON.stringify(updatedCustomer),\n            headers: { 'Content-type': 'application/json' }\n        })\n            .then(res => {\n                if (res.ok) {\n                    setMessage(\"Customer was edited!\")\n                    fetchCustomers();\n                    openSnackbar();\n                }\n                else\n                    alert('Editing is wrong')\n            })\n            .catch(err => console.log(err))\n    }\n    const saveTraining = (training) => {\n        console.log(training);\n\n        fetch(\"https://customerrest.herokuapp.com/api/trainings\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(training)\n        })\n            .then(_ => {\n                alert(\"Training added Succesfully\");\n\n            })\n            .catch(error => console.error(error));\n\n    }\n\n    const columns = [\n        { field: 'firstname', sortable: true, filter: true, rowGroup: true, hide: true },\n        { field: 'lastname', sortable: true, filter: true },\n        { field: 'streetaddress', sortable: true, filter: true },\n        { field: 'postcode', sortable: true, filter: true },\n        { field: 'city', sortable: true, filter: true },\n        { field: 'email', sortable: true, filter: true },\n        { field: 'phone', sortable: true, filter: true },\n        {\n            headName: '',\n            width: 100,\n            field: '',\n            cellRendererFramework: params => <EditCustomer link={params.data.links[0].href} customer={params.data} editCustomer={editCustomer} />\n        },\n        {\n            headName: '',\n            width: 100,\n            field: '',\n            cellRendererFramework: params => <IconButton onClick={() => deleteCustomer(params.data.links[0].href)}><DeleteIcon color=\"secondary\" /></IconButton>\n        },\n\n    ]\n\n    return (\n        <div style={{ paddingTop: 80, height: '100%', width: '90%', margin: 'auto' }}>\n            <AddCustomer style={{ marginTop: 100 }} addCustomer={addCustomer} />\n            <AddTrainings selectedCustomer={selectedCustomer} saveTraining={saveTraining} />\n            <div className=\"ag-theme-material\" style={{ height: 700, width: '100%', margin: 'auto' }}>\n                <AgGridReact\n                    rowData={customerslist}\n                    columnDefs={columns}\n                    pagination={true}\n                    paginationPageSize={10}\n                    suppressCellSelection={true}\n                    rowSelection={'single'}\n                    onGridReady={onGridReady}\n                    onSelectionChanged={onSelectionChanged}\n                    autoGroupColumnDef={{\n                        headerName: 'Firstname',\n                        field: 'firstname',\n                        minWidth: 250,\n                        cellRenderer: 'agGroupCellRenderer',\n                        cellRendererParams: { checkbox: true },\n                    }}\n\n                />\n            </div>\n            <Snackbar\n                open={open}\n                autoHideDuration={3000}\n                message={message}\n                onClose={closeSnackbar}\n            />\n        </div>\n    )\n\n}\n\nexport default Customerlist;","import React, { useEffect, useState } from 'react';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\n\nimport Moment from \"react-moment\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\n\nexport default function Trainings() {\n    const [trainings, setTrainings] = useState([]);\n\n    const fetchTrainings = () => {\n        fetch('https://customerrest.herokuapp.com/gettrainings')\n            .then(res => res.json())\n            .then(data => setTrainings(data))\n            .catch(err => console.log(err))\n    }\n\n    useEffect(() => fetchTrainings(), []);\n\n    const deleteTraining = (id) => {\n        console.log(id)\n        if (window.confirm('Are you sure?')) {\n            fetch(\"https://customerrest.herokuapp.com/api/trainings/\" + id, {\n                method: \"DELETE\"\n            })\n                .then(response => {\n                    if (response.ok) {\n                        alert(\"Customer was deleted!\")\n                        fetchTrainings();\n\n                    }\n\n                    else { alert('Something went wrong!') }\n                })\n                .catch(error => console.error(error));\n        }\n    }\n\n    const columns = [\n\n        { field: 'customer.firstname' },\n        { field: 'customer.lastname' },\n        { field: 'customer.id' },\n        {\n            field: 'date',\n            cellRendererFramework: params => <Moment format=\"DD.MM.YYYY HH:mm\" date={params.data.date} />\n\n        },\n        { field: 'duration' },\n        { field: 'activity' },\n        {\n            headName: '',\n            width: 100,\n            field: '',\n            cellRendererFramework: params => <IconButton onClick={() => deleteTraining(params.data.id)}><DeleteIcon color=\"secondary\" /></IconButton>\n        },\n\n    ]\n\n    return (\n        <div style={{ paddingTop: 80, height: '100%', width: '90%', margin: 'auto' }}>\n\n            <div className=\"ag-theme-material\" style={{ height: 700, width: '100%', margin: 'auto' }}>\n                <AgGridReact\n                    rowData={trainings}\n                    columnDefs={columns}\n                    pagination={true}\n                    paginationPageSize={10}\n                    suppressCellSelection={true}\n                />\n            </div>\n\n\n        </div>\n    );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from \"moment\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nexport default function TheCalendar() {\n\n  const [trainings, setTrainings] = useState([]);\n  const localizer = momentLocalizer(moment);\n\n  useEffect(() => fetchTrainings(), []);\n\n  const fetchTrainings = () => {\n    fetch(\"https://customerrest.herokuapp.com/gettrainings\")\n      .then(response => response.json())\n      .then(responseData => setTrainings(responseData))\n      .catch(error => console.error(error));\n  };\n\n  const ColoredDateCellWrapper = ({ children }) =>\n    React.cloneElement(React.Children.only(children), {\n      style: {\n        backgroundColor: 'lightblue',\n      },\n    })\n\n  const events = trainings.map(event => ({\n    startDate: moment(event.date).toDate(),\n    endDate: moment(event.date)\n      .add(event.duration, \"minutes\")\n      .toDate(),\n    title:\n      event.customer.firstname +\n      \" \" +\n      event.customer.lastname +\n      \": \" +\n      event.activity\n  }));\n\n  return (\n    <div style={{ paddingTop: 80, height: '100%', width: '90%', margin: 'auto' }}>\n      <Calendar\n        localizer={localizer}\n        events={events}\n        startAccessor=\"startDate\"\n        endAccessor=\"endDate\"\n        showMultiDayTimes\n        components={{\n          timeSlotWrapper: ColoredDateCellWrapper,\n        }}\n        style={{ margin: 20, height: \"80vh\" }}\n\n      />\n    </div>\n  );\n}\n","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport {\n    BrowserRouter as Router,\n    Switch, Route, Link\n} from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport PeopleIcon from '@material-ui/icons/People';\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\nimport Customerlist from './Customerlist';\nimport Trainings from './Trainings';\nimport TheCalendar from './TheCalendar';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n    },\n    drawerPaper: {\n        width: drawerWidth,\n    },\n    drawerHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n        justifyContent: 'flex-end',\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    link: {\n        textDecoration: 'none',\n        color: theme.palette.text.primary\n    }\n}));\n\nexport default function DrawerNavLeft() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = React.useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, open && classes.hide)}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" noWrap>\n                        Personal trainers\n                         </Typography>\n                </Toolbar>\n            </AppBar>\n            <Router>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={open}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={handleDrawerClose}>\n                            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        <Link to=\"/\" className={classes.link}>\n                            <ListItem>\n                                <ListItemIcon>\n                                    <PeopleIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Customers'} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/trainings\" className={classes.link}>\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <SportsHandballIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Trainings'} />\n                            </ListItem>\n                        </Link>\n                        <Link to=\"/calendar\" className={classes.link}>\n                            <ListItem button>\n                                <ListItemIcon>\n                                    <EventNoteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={'Calendar'} />\n                            </ListItem>\n                        </Link>\n                    </List>\n                </Drawer>\n                <Divider />\n                <Switch>\n                    <Route exact path=\"/\" > <Customerlist /></Route>\n                    <Route exact path=\"/trainings\"><Trainings /></Route>\n                    <Route exact path=\"/calendar\"><TheCalendar /></Route>\n                </Switch>\n\n            </Router>\n\n\n        </div>\n    );\n}\n","import React from 'react';\nimport './App.css';\nimport DrawerNavLeft from './component/DrawerNav';\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <DrawerNavLeft />\n    \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}